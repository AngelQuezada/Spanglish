{"ast":null,"code":"var _jsxFileName = \"/home/angel/git/UMGC-Bootcamp/assessments/snack-or-booze/src/FoodMenu.js\";\nimport React from \"react\";\nimport { Card, CardBody, CardTitle, CardText, ListGroup, ListGroupItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport useFetch from './hooks/useFetch';\nimport Food from \"./Food\";\nimport DrinkMenu from \"./Drinks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FoodMenu = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DrinkMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Food, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_c = FoodMenu;\nexport default FoodMenu;\n\n// const FoodMenu = () => {\n\n//   const { data: drinks, loading: drinksLoading, error: drinksError } = useFetch(\"drinks\");\n//   const { data: snacks, loading: snacksLoading, error: snacksError } = useFetch(\"snacks\");\n\n//   if (drinksLoading || snacksLoading) {\n//     return <p>Loading...</p>;\n//   }\n\n//   if (drinksError || snacksError) {\n//     return <p>Error: {drinksError?.message || snacksError?.message}</p>;\n//   }\n\n//   return (\n//     <>\n//       <Card>\n//         <CardBody>\n//           <CardTitle className=\"font-weight-bold text-center\">Drink Menu</CardTitle>\n//           <CardText>\n//             Some quick example text to build on the card title and make up the bulk of the card's content.\n//           </CardText>\n//           <ListGroup>\n//             {drinks.map(drink => (\n\n//               <Link to={`/drinks/${drink.id}`} key={drink.id}>\n//                 <ListGroupItem>{drink.name}</ListGroupItem>\n//               </Link>\n//             ))}\n//           </ListGroup>\n//         </CardBody>\n//       </Card>\n\n//       <Card>\n//         <CardBody>\n//           <CardTitle className=\"font-weight-bold text-center\">Food Menu</CardTitle>\n//           <CardText>\n//             Some quick example text to build on the card title and make up the bulk of the card's content.\n//           </CardText>\n//           <ListGroup>\n//             {snacks.map(snack => (\n//               <Link to={`/snacks/${snack.id}`} key={snack.id}>\n//                 <ListGroupItem>{snack.name}</ListGroupItem>\n//               </Link>\n//             ))}\n//           </ListGroup>\n//         </CardBody>\n//       </Card>\n//     </>\n//   );\n// };\n\n// export default FoodMenu;\nvar _c;\n$RefreshReg$(_c, \"FoodMenu\");","map":{"version":3,"names":["React","Card","CardBody","CardTitle","CardText","ListGroup","ListGroupItem","Link","useFetch","Food","DrinkMenu","jsxDEV","_jsxDEV","Fragment","_Fragment","FoodMenu","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/angel/git/UMGC-Bootcamp/assessments/snack-or-booze/src/FoodMenu.js"],"sourcesContent":["import React from \"react\";\r\nimport { Card, CardBody, CardTitle, CardText, ListGroup, ListGroupItem } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useFetch from './hooks/useFetch'\r\nimport Food from \"./Food\";\r\nimport DrinkMenu from \"./Drinks\";\r\n\r\nconst FoodMenu = () => {\r\n\r\n\r\n  return (\r\n    <>\r\n    <DrinkMenu/>\r\n    <Food/>\r\n\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default FoodMenu;\r\n\r\n\r\n\r\n\r\n\r\n// const FoodMenu = () => {\r\n\r\n  \r\n\r\n//   const { data: drinks, loading: drinksLoading, error: drinksError } = useFetch(\"drinks\");\r\n//   const { data: snacks, loading: snacksLoading, error: snacksError } = useFetch(\"snacks\");\r\n\r\n//   if (drinksLoading || snacksLoading) {\r\n//     return <p>Loading...</p>;\r\n//   }\r\n\r\n//   if (drinksError || snacksError) {\r\n//     return <p>Error: {drinksError?.message || snacksError?.message}</p>;\r\n//   }\r\n\r\n//   return (\r\n//     <>\r\n//       <Card>\r\n//         <CardBody>\r\n//           <CardTitle className=\"font-weight-bold text-center\">Drink Menu</CardTitle>\r\n//           <CardText>\r\n//             Some quick example text to build on the card title and make up the bulk of the card's content.\r\n//           </CardText>\r\n//           <ListGroup>\r\n//             {drinks.map(drink => (\r\n              \r\n//               <Link to={`/drinks/${drink.id}`} key={drink.id}>\r\n//                 <ListGroupItem>{drink.name}</ListGroupItem>\r\n//               </Link>\r\n//             ))}\r\n//           </ListGroup>\r\n//         </CardBody>\r\n//       </Card>\r\n\r\n//       <Card>\r\n//         <CardBody>\r\n//           <CardTitle className=\"font-weight-bold text-center\">Food Menu</CardTitle>\r\n//           <CardText>\r\n//             Some quick example text to build on the card title and make up the bulk of the card's content.\r\n//           </CardText>\r\n//           <ListGroup>\r\n//             {snacks.map(snack => (\r\n//               <Link to={`/snacks/${snack.id}`} key={snack.id}>\r\n//                 <ListGroupItem>{snack.name}</ListGroupItem>\r\n//               </Link>\r\n//             ))}\r\n//           </ListGroup>\r\n//         </CardBody>\r\n//       </Card>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default FoodMenu;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,aAAa,QAAQ,YAAY;AAC1F,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,SAAS,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAGrB,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACAJ,OAAA,CAACF,SAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACZR,OAAA,CAACH,IAAI;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAEL,CAAC;AAEP,CAAC;AAACC,EAAA,GAVIN,QAAQ;AAad,eAAeA,QAAQ;;AAMvB;;AAIA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}